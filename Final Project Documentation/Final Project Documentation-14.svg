<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="612pt" height="792pt" viewBox="0 0 612 792">
<g enable-background="new">
<path transform="matrix(.75,0,0,.75,0,0)" d="M 0 0 L 816 0 L 816 1056 L 0 1056 Z " fill="#ffffff"/>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 72)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 4.0719759 8.143951 12.215927 22.800202 30.95131 35.023286 43.174394 51.3255 58.653627 66.80473 70.87671 83.08548 91.23659 96.11723 104.26834 108.34032 112.41229 115.66844 127.87721 136.02832 140.1003 144.17227 154.75655 162.90766 166.97963 177.5639 180.82006 184.0762 187.33235 191.40433 198.73246 202.80443 207.68508 215.83618 223.98729 236.19606 239.45221 242.70836 250.85947 259.01057 263.08253 267.15449 275.3056 283.45674 287.5287 295.6798 300.56047 308.71156 316.03968 324.1908 331.51893 338.84706 342.919 351.07014 359.22126 367.37239 371.44435 378.77247 386.92359 399.13236 407.28346 410.5396 418.69075 426.84187 430.91383 439.06495 447.21607 452.0967 456.1687 463.49684 471.64796 479.79908 487.9502 495.27833 499.35029 503.42225 516.99057 525.14169 529.2136 534.09426 542.24539 549.5735 553.64547 556.9016 560.9736 568.3017 572.37368 575.6298 587.8386 595.98977 604.14089 612.292">If we have more time, we will streamline the process and combine our codes. We rectify images</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 86.5459)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 4.0719759 12.2230839 16.29506 24.446167 28.518143 35.846269 43.997377 56.206148 68.41492 76.566028 84.71713 88.78911 96.940219 100.196369 108.34747 116.49858 124.64969 128.72167 136.87277 145.02388 153.17499 157.24697 164.57509 172.7262 180.8773 185.75795 193.08608 201.23719 205.30916 213.46027 221.61138 226.49202 233.82015 237.89212 246.04323 253.37136 256.6275 264.77864 272.92976 277.0017 285.15284 289.2248 296.55293 304.70405 312.85517 317.7358 325.06394 333.21504 337.287 341.35896 349.51008 353.58204 357.654 360.91017 369.06129 377.2124 381.28437 388.6125 392.68446 397.5651 405.7162 409.78816 417.93928 426.0904 432.32997 436.40193 440.47389 448.625 456.77613 464.92726 468.9992 476.32734 484.47846 489.3591 492.61524 496.6872 504.01533 508.08729 511.34346 515.4154 519.48739 523.5593 531.71047 539.8616 547.1897 551.26168 559.4128 564.29348 572.4446 576.51657 580.5885 588.7396">to a common plane and search ears using a coarse to fine strategy, and verify if they are the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 101.09277)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 7.328125 15.479233 27.688004 35.83911 39.911088 48.062196 56.213304 61.09395 68.42207 72.49405 83.07832 86.33447 90.40645 98.557559 102.62953 106.70151 114.852619 119.73326 127.88437 135.2125 143.3636 151.51471 154.77086 162.92197 166.17812 174.32923 182.48033 186.5523 193.88043 202.03154 209.35967 213.43164 221.58275 229.73386 232.99 241.14112 245.21309 252.54122 256.6132 264.76429 272.9154 276.98738 287.57167 295.72279 303.8739 312.02503 316.097 320.16896 330.75325 338.90437 342.97633 346.23249 358.44126 366.59236 374.74348 382.8946 390.22273 394.29469 402.4458 409.77394 413.0301 421.1812 429.33235 433.4043 443.1799 447.2519 456.20454 464.89219 468.96418 477.1153 481.99595 486.06794 494.21907 498.29103 506.44215 514.59329 519.4739 523.54586 527.6178 535.7689 543.92007 547.992 556.1431 561.0238">same ears with thresholding key points between two images using SIFT or other feature</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 115.63867)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 12.208771 20.359879 24.431855 31.75998 39.911088 43.167238 51.318346 59.46945 63.541429 67.6134 75.76451 83.092639 91.243747 99.39485 102.651 110.80211 118.95322 127.104328 134.43245">matching techniques.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 130.18555)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 13.568298 21.719407 25.791382 33.94249 37.19864 44.526765 52.67787 56.749849 64.900959 68.157108 76.30821 84.45932 87.71547 91.787448 95.85942 99.9314 103.187549 111.33865 114.5948 121.92293 130.07404 134.14601 138.21799 146.3691 149.62525 152.8814 160.20952 164.2815 167.53765 179.74642 187.89752 191.15367 199.30478 211.51355 219.66466 227.81577 231.88774 235.14389 243.295 251.4461 255.51808 263.6692 271.8203 279.97145 288.12257 291.37873 294.6349 302.786 310.93714 315.0091 319.08106 327.23219 335.3833 339.45527 347.60639 355.7575 363.90864 367.1648 375.31593 379.38789 387.539 391.61097 395.68293 403.83406 411.98518 416.8658 424.19395 428.26594 431.5221 439.67323 443.74519 451.8963 460.04743 464.92808 469.00007 477.15119 482.03184 490.18293 498.33406 503.2147 511.36579 523.5746 527.64657 531.7185 545.55178 553.7029 556.95907 560.2152 568.36636 572.4383 580.5894 588.74057">We also didn&#x2019;t finish fully implementing handling the angle of ears in our program. While our</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 144.73047)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 8.151108 13.031754 21.182862 29.33397 34.214616 42.365724 54.574495 58.64647 66.79758 70.05373 78.204837 82.27681 86.348789 94.49989 102.651 106.72298 114.0511 122.20221 125.45836 128.71451 136.86562 141.74626 149.89737 153.96935 157.2255 165.3766 173.52771 177.59969 184.92781 193.07892 197.95957 202.84021 210.99132 218.31945 222.39142 225.64757 232.9757 237.04767 241.11965 246.00029 254.1514 266.36018 270.43214 281.01643 289.16755 297.31867 301.39064 305.4626 316.04689 324.198 328.26997 335.59809 343.7492 353.52424 357.5962 361.66816 372.25245 380.40357 384.47554 395.0598 403.21095 408.09159 416.24269 420.31465 428.46577 436.61689 444.768 452.09614 455.3523 458.60847 465.93659 470.00856 477.33668 481.40864 489.55976 501.76853 509.91963 518.07077 526.22189 530.2938 538.44497 546.59609 550.668 554.74 562.8911">program did the calibration correctly from what we saw, we were heavily stumped on the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 159.27735)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 7.328125 15.479233 27.688004 35.83911 43.99022 48.062196 56.213304 60.28528 63.541429 71.692539 79.84364 83.91562 87.987598 96.1387 100.21068 108.361789 115.68991 123.84102 127.912998 131.98497 140.13608 148.28719 152.35916 159.68729 167.8384 171.09455 179.24565 187.39676 194.72489 198.79686 202.86884 211.01995 219.17105 223.24303 227.315 237.89928 246.05039 250.12236 257.4505 265.60163 276.1859 280.25788 288.409 296.56013 304.71125 308.7832 316.93434 325.08546 333.23658 336.49275 343.82087 347.89283 351.149 355.22096 359.2929 363.36488 371.516 375.58796 383.73908 391.8902 396.77085 404.09898">computation to use the values that we saw and apply it to ears.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 188.37012)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 13.568298 21.719407 25.791382 33.94249 37.19864 44.526765 52.67787 56.749849 64.900959 68.157108 76.30821 84.45932 87.71547 91.787448 95.85942 99.9314 103.187549 111.33865 114.5948 121.92293 130.07404 134.14601 138.21799 146.3691 153.69722 157.7692 161.02535 169.17646 177.32756 181.39954 185.47151 193.62262 201.77373 205.8457 210.72635 218.87746 227.02857 235.17967 242.5078 246.57978 254.73088 262.882 270.2101 277.53825 281.61024 289.76136 293.8333 297.90528 306.0564 314.20753 319.08818 323.16017 331.31129 336.19194 344.34303 352.49415 357.3748 365.52589 377.73466 381.80665 385.61366 394.56629 402.7174 410.86854 414.9405 418.19667 430.40544 438.55653 446.70765 454.85877 462.1869 466.25886 476.84315 484.99427 489.06623 497.21736 504.54548 512.6966 520.8477 524.9197 535.50399 543.6551 548.53579 556.6869 560.75888 568.91 577.0611 585.2122 593.36337 598.244 606.39517 609.6513 612.9075">We also didn&#x2019;t finish testing the robustness of our program. The images we used were generally</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 202.91602)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 7.328125 15.479233 23.63034 27.702317 31.774292 35.846269 43.997377 52.148485 56.22046 63.548585 71.69969 83.90846 92.05957 96.131549 100.20352 108.35463 116.50574 124.656848 128.72882 139.3131 147.4642 151.53618 159.68729 162.94344 171.09455 179.24565 182.5018 186.57378 190.64575 197.97388 206.12499 211.00563 218.33376 222.40573 226.4777 234.62882 238.70079 246.8519 254.18003 257.43617 265.58729 273.7384 277.81037 285.9615 289.21766 293.02467 297.09663 305.24775 310.1284 318.27949 326.4306 330.50257 334.57453 342.72566 350.87678 359.0279 367.17903 370.43519 378.5863 382.65827 386.73023 394.88136 398.9533 406.28144 414.43257 422.58369 426.65565 434.80677 442.9579 453.54219 457.61415 462.49479 470.64588 478.797 486.94813 494.27626 498.3482 502.42018 510.5713 518.7224 523.603 527.675 535.8261 540.7068 548.8579 557.00906 561.88967 570.0408">kept the same, and we didn&#x2019;t vary to using different people to see how robust our program</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 217.46289)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 10.584274 18.735383 26.88649 30.14264 38.293748 42.365724 50.51683 58.66794 65.99606 74.14717 78.21915 86.370258 94.52136 102.67247 110.82358 114.89555 118.96753 132.53583 140.68694 144.75891 152.91002 156.16617 163.4943 171.6454 175.71738 183.86849 187.12464 195.27574 203.42685 206.683 210.75498 214.82695 222.97806 231.12917 235.20114 239.27312 247.42423 255.57534 259.6473 263.7193 275.92808 284.07917 291.4073 299.5584 303.63038 307.70234 315.85346 323.18159 327.25355 330.5097 338.66084 346.81196 350.8839 359.03504 367.18617 375.33729 378.59346 386.74458 394.0727 398.14466 402.2166 406.28858 414.4397 422.59083 426.66279 436.4384 440.51039 449.463 458.41566 466.97468 474.3028 479.18345 487.33454 495.48567 499.55763 510.1419 513.3981 517.47006 525.62118 529.6931 537.02127 541.90188 554.1106 562.2617 570.41287 578.56399 585.8921 589.96408 600.54837 603.8045 607.87649">would have been. We also didn&#x2019;t do that much testing against the SIFT+crop with k-means with</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 232.00977)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 8.151108 16.302216 20.374192 23.63034 35.83911 43.99022 52.141328 60.292436 64.36441 74.948688 78.204837 82.27681 90.42792 94.49989 102.651 110.80211 114.874088 127.082859 135.23397 139.30594 146.63407 154.78517 158.04132 166.19243 174.34354 178.41551 186.56662 194.71773 199.59838 203.67035 215.87912 224.03023 232.18134 240.33245 243.5886 251.7397 259.8908 263.96278 268.03474 276.18586 284.33699 288.40895 292.4809 300.63203 308.78315 312.8551 320.18324 323.4394 331.5905 339.74165 343.8136 351.96473 356.03669 360.10865 364.1806 372.33174 375.5879 382.91603 386.98799 394.3161 401.64424 409.79536 417.94648 426.0976 430.16957 438.32069 442.39265 446.4646 454.61573 462.76686 467.6475 471.71949 479.8706 484.75126 492.90235 496.1585 504.30964 511.63777 515.7097 519.7817 523.85366 534.4379 542.58908 546.661 554.81216 562.96328 571.1144 574.37057 578.4425 582.51449 587.39517 595.54629 603.6974 606.95358 610.2097">an image with no matching ear meaning that outside of this scope of our project, we don&#x2019;t really</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 246.55469)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 7.328125 15.479233 23.63034 34.214616 38.28659 41.54274 45.614717 49.68669 52.94284 57.014818 61.086793 71.67107 79.822177 87.97328 91.22943 99.38054 103.452518 111.60362 118.93175 127.082859 135.23397 139.30594 149.89022 158.04132 162.92197 170.25009 174.32207 182.47318 186.54515 190.61713 198.76824 202.02439 205.28054">know if it would even work at all.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 275.64747)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 13.568298 21.719407 25.791382 33.94249 37.19864 44.526765 52.67787 56.749849 64.900959 68.157108 76.30821 84.45932 87.71547 91.787448 95.85942 99.9314 103.187549 111.33865 114.5948 121.92293 130.07404 134.14601 138.21799 146.3691 153.69722 157.7692 161.02535 169.17646 177.32756 181.39954 189.55065 197.70175 202.5824 206.65438 214.80548 219.68613 227.83724 235.98834 240.86899 249.0201 261.22889 265.30085 273.45198 281.6031 289.7542 293.01039 301.1615 308.48963 312.56159 316.63356 320.7055 325.58616 333.73725 341.88838 345.96034 354.11146 362.26258 370.4137 378.56483 382.63679 385.89295 393.22108 401.3722 405.44416 408.70033 420.9091 429.06019 437.2113 445.36244 452.69056">We also didn&#x2019;t finish testing our program against true negative images.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 333.833)" font-size="14.666667" font-family="Arial" font-weight="bold"><tspan y="13.757161" x="0 8.952621 17.10373 25.254837 33.405946 42.358568 51.311189 59.462297 63.53427 72.48689 80.638 88.78911 94.49274 103.44536 111.596469">Lessons Learned</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 348.3789)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 11.400101 19.551209 23.623185 27.69516 30.95131 39.102418 47.253526 51.3255 59.47661 67.627719 75.778827 79.8508 88.00191 92.07388 102.65816 105.91431 109.98628 118.13739 122.209369 129.53749 133.60947 141.76058 146.64122 154.79233 162.94344 167.01541 174.34354 177.59969 184.92781 188.18396 196.33507 204.48618 208.55815 211.8143 219.14243 223.2144 231.36551 235.43749 247.64626 255.79737 259.86933 268.02046 272.0924 280.24354 288.39466 296.54579 303.8739 311.20204 315.274 323.4251 331.57624 339.72737 343.79933 351.95045 356.8311 361.71174 369.86286 374.7435 378.8155 386.9666 391.84727 399.99836 408.14949 416.3006 420.37257 428.52369 433.40434 441.55543 448.88356 457.03468 464.3628 471.69093 475.76289 479.83485 493.40315 501.55427 505.62623 509.69819 512.95437 517.83499 525.1631 529.23507 533.307 541.4581 549.60928 557.7604 565.9115 569.98348 574.0554 582.20657 586.2785 590.35049 593.6066 601.75778">Getting depth with stereo vision is a math heavy and error prone process. We first need to find</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 362.92579)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 4.0719759 12.2230839 20.374192 24.446167 27.702317 35.853425 39.9254 44.806047 48.062196 56.213304 63.541429 66.79758 74.1257 78.19768 86.348789 94.49989 99.38054 107.53165 119.74042 127.891529 131.9635 140.11461 144.99526 152.32338 156.39536 164.54647 171.87459 175.94657 183.27469 191.4258 194.68195 197.9381 206.0892 210.96985 219.12096 223.19293 226.44908 234.60019 242.7513 246.82328 254.1514 262.3025 274.51127 282.66236 287.543 295.6941 303.02223 307.09419 315.2453 322.57344 325.8296 333.9807 342.13185 346.2038 353.53193 361.68305 369.83418 377.1623 384.49043 392.64155 400.79267 408.9438 413.82444 421.97554 426.0475 429.30366 441.51243 449.6635 457.81465 465.96577 473.29389 477.36585 481.4378 490.39045 493.6466 501.79774 509.94886 514.0208 518.0928 526.2439 534.395 538.467 546.6181 553.9462 558.0182 562.8988 566.15499 574.3061 581.6342 584.8904">the intrinsic parameters by calibrating cameras using chessboard images. Find the extrinsic</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 377.4707)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 8.151108 16.302216 21.182862 29.33397 41.54274 49.693849 53.765825 61.91693 66.79758 74.1257 78.19768 88.78195 92.0381 96.11008 104.261188 108.33316 115.661289 123.81239 131.14052 135.2125 143.3636 151.51471 154.77086 162.92197 166.99394 171.06592 183.27469 191.4258 195.49777 202.8259 210.977 214.23316 222.38426 230.53537 234.60735 238.67932 246.83043 250.9024 254.15856 262.30967 270.46076 275.3414 283.4925 287.56446 291.6364 299.78755 307.93867 312.01063 316.89128 325.04237 328.29853 336.44966 340.5216 343.77778 351.9289 360.08003 367.40815 375.55928 378.81544 386.96656 391.0385 399.18965 407.34077 411.41273 421.997 430.14814 438.29927 446.45039 450.52235 454.5943 462.74543 470.89656 474.9685 478.22468 486.3758 490.44776 494.5197 498.59169 501.84785 514.05667 522.20779 530.3589 538.51 542.582 550.7331 558.8842 567.03536 571.1073 575.9879 579.2441 587.3952 595.5463">parameters with key point matching to learn the relationship between the left image and right</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 392.01759)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 3.2561494 15.46492 23.616028 31.767136 39.918245 43.99022 47.797227 56.749849 64.900959 73.05206 81.20317 85.27515 89.34712 99.9314 108.082508 112.15448 119.482608 127.63371 135.78482 139.8568 148.0079 152.88855 161.03966 164.2958 172.44692 179.77504 183.84702 187.91899 191.99097 200.14208 208.29319 212.36516 215.6213 227.83008 235.98119 244.1323 252.2834 259.6115 263.68348 267.75544 275.90657 279.97853 288.12965 292.2016 299.52973 307.68086 319.88963 332.0984 340.2495 348.40065 352.4726 360.62373 363.87989 372.031 376.10298 384.2541 388.32606 392.398 400.54914 404.6211 412.77223 420.92335 424.9953 429.06727 433.13923 441.29035 449.44148 453.51344 460.84156 468.99269 473.87333 478.75398 486.9051 494.23323 498.30519 502.37715 510.52827 518.6794 521.93557 530.0867 538.2378 541.49398 549.6451 554.52578 558.5977 561.8539 565.11007 573.26119 581.4123 588.7404">image. Then, we can project the images to a common plate to get the correct epipolar lines.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 406.56446)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 9.775604 17.926712 21.182862 28.510987 36.662096 40.73407 44.806047 52.957155 61.10826 65.18024 72.50836 80.65947 85.540119 90.42076 98.57187 105.899997 114.0511 122.20221 130.35332 138.50443 146.65554 154.80664 162.13477 170.28588 174.35785 182.50896 187.3896 195.54071 203.69182 206.94797 215.09908 227.30785 231.37982 235.4518 242.77993 250.93103 254.18718 261.51533 269.66645 272.9226 281.07374 285.1457 293.2968 297.36878 305.5199 308.77607 316.1042 324.2553 332.40644 337.28709 340.5432 344.61518 350.85475 354.9267 358.99867 367.14979 375.3009 383.45204 387.524 391.59596 394.8521 403.00325 411.15437 414.41053 417.6667 424.9948 429.06678 436.3949 444.54603 447.8022 455.1303 463.28144 466.5376 474.68873 478.76069 486.9118 490.98377 495.05574 503.20686 511.35798 515.42996 523.58108 531.7322 539.8833 543.95529 552.1064 556.17837 564.32949 568.4014 572.4734 576.54537 584.6965">Solve the correspondence problem, calculate disparity, and finally calculate the depth of the</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 421.11036)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 3.2561494 15.46492 23.616028 31.767136 39.918245 47.24637 51.318346 55.39032 65.974597 74.1257 81.45383 84.70998 92.861087 101.01219 105.08417 109.15614 117.30725 121.37923 129.53034 137.68144 145.83255 153.98366 157.2398 165.39092 169.46289 177.614 185.7651 193.09323 201.24434 205.31632 213.46743 217.5394 221.61138 225.68335 233.83446 241.98557 249.31369 257.46479 261.53675 269.68788 274.5685 282.7196 290.87074 294.1269 302.278 314.4868 321.8149 325.8869 333.21504 341.36616 349.51728 356.8454 364.99653 369.87718 378.02827 381.28443 389.43556 397.58668 401.65864 408.98677 413.05873 421.20985 426.09049 434.24159 442.3927 446.46467 453.7928 457.04896 464.37709 467.63325 475.78437 483.9355 488.00746 498.59175 506.74287 514.071 518.14297 525.47109 533.6222 538.5028 545.83096 549.9029 558.054 566.20516 571.0858 579.23696 583.3089 587.38088 595.532 599.60397 607.75509">images. Having to handle each of these problems concerning stereo vision was very hard to do</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 435.65626)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 10.584274 13.840424 17.9124 26.063508 34.214616 42.365724 46.4377 50.509675 58.66078 65.98891 69.245059 77.396167 85.54727 89.61925 96.94737 105.09848 113.24959 121.400699 125.47267 132.8008 140.9519 153.16068 161.31179 164.56793 172.71904 180.04717">without using code samples.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 479.29493)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 9.775604 13.84758 22.800202 31.487854 35.55983 42.887956 51.039064 58.367189 66.518299 74.6694 77.92555 86.07666 90.148639 94.22061 106.42938 114.58049 118.652469 125.98059 134.1317 137.38785 145.53896 153.69007 157.76204 161.01819 168.34632 172.41829 180.5694 188.7205 196.87162 204.19974 207.45589 210.71204 218.04016 222.11214 225.36829 237.57706 245.72817 253.87928 261.2074 265.27937 273.43049 281.5816 285.65357 293.8047 301.1328 305.20478 313.3559 317.42787 320.68403 328.83515 332.9071 336.97908 345.1302 349.20216 353.2741 361.42524 364.6814 368.4884 372.56037 380.7115 385.59214 393.74324 401.89436 405.9663 410.03828 414.11024 422.26136 429.58949 433.66145 441.81257 446.6932 454.02134 458.09333 462.16529 467.04594 475.19703 483.34815 491.49928 494.75544 502.90657 511.05769 515.12966 519.2016 524.0823 532.2334 544.44216 548.5141 556.6652 561.5459 564.80209 572.9532 581.1043 585.1763 593.3274 601.4785 608.80667 616.13479">SIFT keypoint matching is heavily impacted by a lot of different factors, ranging from brightness,</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 493.8418)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 7.328125 15.479233 23.63034 27.702317 32.582963 40.73407 48.062196 52.13417 56.206148 60.278123 67.60625 75.757358 79.013507 87.16461 91.23601 95.30798 99.37996 106.708087 109.96423 117.29236 125.44347 129.51544 137.66655 141.73853 145.8105 149.06665 161.27542 169.42653 177.57764 185.72875 189.80072 193.8727 202.0238 210.17491 218.32602 222.398 230.5491 233.80525 241.95636 246.837 254.16513 258.23713 262.30909 276.14234 284.29347 292.44459 300.5957 304.66767 315.25196 323.40309 327.47505 331.547 334.80317 339.6838 347.01194 351.08393 355.15589 362.484 366.55598 374.7071 379.58775 383.65974 391.81086 399.96199 404.03395 414.61824 422.76936 426.8413 430.91328 439.0644 447.2155 455.36665 463.51777 471.66889 475.74085 479.8128 483.88478 492.0359 500.187 504.25898 516.4678 524.6189 531.947 536.019 540.09097 550.67526 558.82638 562.8983 573.4826 581.6337 589.78488 593.041 601.19216 605.2641 613.4152">contrast, color, size of image, and blurs. When we first started we thought the most we would be</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 508.3877)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 7.328125 15.479233 23.63034 31.781449 39.932558 43.188707 51.339815 59.49092 63.562898 74.14717 82.29828 90.44939 93.705539 101.85664 105.92862 114.07973 122.230838 126.30281 133.63094 136.88709 144.21521 152.36632 156.4383 160.51027 168.66138 176.81249 180.88446 184.95644 193.10755 200.43567 204.50765 211.83577 219.98688 228.13799 232.20996 239.53809 247.6892 255.8403 259.9123 267.24043 275.39155 283.54267 287.61463 291.68659 299.8377 307.98884 312.0608 316.13276 324.28388 332.435 335.69117 343.0193 350.3474 353.60359 360.9317 365.00367 372.3318 380.4829 388.63404 396.78517 404.93629 413.0874 421.23854 425.3105 433.4616 440.78974 444.8617 448.93367 457.08479 465.2359 469.30787 477.45899 482.33964 490.49073 493.7469 501.898 509.22615 513.2981 517.37008 525.5212 530.40188 538.553 546.7041 551.5847 559.73587 567.06399 574.3921 582.5432 590.69436">changing would be size, but as you can see that quickly changed as the project progressed.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 552.02639)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 12.208771 20.359879 24.431855 31.75998 39.911088 43.718095 51.04506 59.196168 71.40494 79.556049 82.812198 90.9633 95.03528 103.186389 107.25836 110.51451 117.842639 121.91461 129.24274 137.39385 142.27449 149.60262 153.67459 161.8257 165.08185 172.40998 179.7381 187.06623 191.1382 199.2893 207.44042 211.51239 222.09667 230.24777 238.39888 242.47086 246.54283 249.79898 253.87096 257.94294 268.52723 271.7834 275.03956 278.29573 282.36769 289.6958 297.84693 305.17506 312.50318 320.6543 327.98243 335.31056 339.3825 347.53364 350.7898 354.04597 361.37409 365.44606 368.7022 376.85334 385.00447 393.15559 397.22755 400.4837 404.55567 410.79524 414.8672 418.93916 430.33924 438.49037 443.371 447.443 455.59413 463.74525 471.89637 480.0475 483.30366 486.5598 494.71095 502.86207 506.93403 515.08517 519.1571 523.22909 530.5572 533.81338 541.1415 549.2926 556.6207 560.6927 568.8438 576.99496">Match Template is very picky on what it will successfully identify. Our handling of sizes and</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 566.57327)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 4.8806459 13.031754 20.359879 23.616028 30.944153 39.09526 46.423387 50.49536 54.567338 65.15161 73.30272 76.55887 79.81502 87.966129 92.0381 100.18921 103.44536 111.596469 115.66844 126.252719 134.40383 139.28447 146.6126 150.68457 154.75655 162.90766 166.97963 175.13074 183.28185 187.35382 195.50493 202.83306 206.90503 215.05614 223.20725 227.27922 231.3512 235.42317 246.00745 254.15856 261.4867 265.55867 268.81483 276.96595 281.0379 289.18904 297.34016 301.4121 311.9964 320.14753 327.47566 331.5476 336.42826 344.57936 352.73048 360.8816 368.20973 372.28169 376.35365 384.50477 392.65589 400.807 404.87898 415.46327 423.61439 431.7655 435.02168 443.1728 447.24476 455.39588 460.27653 468.4276 476.57875 484.72987 492.88099 496.13716 503.46528 507.53724 512.41787 520.569 527.8971 536.0482 539.3044 543.37637 547.4483 550.70449 558.8556 562.92758 575.13638 583.2875 588.1681">resizes, while did work to an extent, was in no way robust and would probably result in more</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 581.11917)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 3.2561494 10.584274 17.9124 26.063508 34.214616 41.54274 45.614717 48.870866 52.94284 57.014818 65.165927 73.31703 81.46814 84.72429 87.98044 96.131549 104.28265 108.35463 112.426609 120.57771 124.64969 127.90584 140.11461 148.26572 156.41683 164.56793 171.89606 175.96804 184.11914 192.27025 196.34223 203.67035 206.9265 215.0776 223.22872 227.30069 235.4518 239.52378 243.59575 251.74686 259.89796 264.7786 268.8506 276.1787 284.32984 296.5386 304.6897 307.94587 316.097">issues if applied to images outside of our sample.</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 624.7578)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 13.833267 21.984375 30.135483 38.28659 42.358568 50.509675 58.66078 66.81189 70.06804 73.32419 81.475299 89.6264 93.69838 104.28265 107.5388 111.61078 119.76189 123.83386 127.09001 139.29878 147.44989 155.601 163.7521 167.82408 175.97519 180.85584 189.00695 196.33507 204.48618 211.8143 219.14243 222.39858 230.54969 238.70079 242.77277 246.84474 250.10089 254.17287 258.24485 261.50099 268.8291 272.90107 280.2292 288.3803 293.26097 300.58909 304.66108 307.91725 320.126 328.2771 336.42823 341.30888 345.38087 353.53199 361.6831 365.75508 369.82704 373.899 382.0501 386.12208 394.2732 402.42433 409.75245 417.90357 421.97554 430.12666 434.1986 441.52674 445.5987 453.74983 461.90095 470.05207 478.2032 483.08384 491.23493 494.4911 501.8192 509.97035 518.12149 522.1934 529.52157 532.7777 540.10586 548.25698 552.3289 556.4009 564.552 569.4326 573.5046 577.57656 585.72769 593.0558">When dealing with image processing, it is very important to have a standardized size for test</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 639.3047)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 3.2561494 15.46492 23.616028 31.767136 39.918245 47.24637 51.318346 54.574495 62.7256 66.79758 70.86955 79.02066 83.901309 96.11008 103.4382 107.51018 115.661289 119.73326 123.80524 131.95635 135.2125 142.54062 150.69173 153.94788 161.276 165.34798 173.49909 181.65019 189.8013 193.87328 198.75392 206.90503 214.23316 222.38426 225.64041 233.79152 237.8635 241.11965 249.27075 257.42189 261.49385 265.5658 279.39906 282.6552 286.72718 294.8783 298.95027 307.10139 310.35755 314.16456 318.2365 326.38764 331.26829 339.41938 347.5705 351.64247 355.71443 358.97059 371.17936 379.33045 387.48158 395.6327 399.70466 407.03279 410.28895 417.61708 425.7682 433.0963 437.16828 441.24024 444.4964 448.56837 452.64033 460.79145 468.94258 473.01454 477.0865 485.2376 493.38874 496.6449 503.97303 508.04499 516.1961 520.0031 524.0751 532.2262 539.5543 543.6263 551.7774 559.9285 564.0005 572.1516 580.30276">images in terms of pixels and resolution. With different image sizes, it not only affected our</tspan></text>
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 653.8506)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="0 8.151108 16.302216 21.182862 25.254837 33.405946 38.28659 50.49536 58.64647 66.79758 74.1257 82.27681 86.348789 89.604938 97.75604 101.82802 105.899997 114.0511 122.20221 126.274188 133.60231 141.75342 149.90453 158.05564 162.12761 166.19959 174.3507 182.5018 186.57378 190.64575 198.79686 202.05301 209.38114 217.53224 221.60422 229.75533 237.90644 248.4907 252.56269 263.14698 271.2981 274.55427 277.81044 281.8824 290.0335 298.18464 303.06529 307.13728 315.2884 318.54457 326.69569 334.8468 339.72746 342.98359 347.05555 355.20668 367.41545 374.74357 378.81556 389.39985 397.55097 402.4316 410.5827 414.65467 422.8058 430.1339 438.28504 446.43617">performance in the code, but also how well our algorithms were used.</tspan></text>
<clipPath id="cp69">
<path d="M 0 720 L 612 720 L 612 792 L 0 792 Z " fill-rule="evenodd"/>
</clipPath>
<g clip-path="url(#cp69)">
<text xml:space="preserve" transform="matrix(.75 0 0 .75 72 741.4541)" font-size="14.666667" font-family="ArialMT"><tspan y="13.757161" x="607.69778 615.8489">14</tspan></text>
</g>
<path transform="matrix(.75,0,0,.75,72,333.833)" stroke-width="1.3333334" stroke-linecap="butt" stroke-miterlimit="10" stroke-linejoin="miter" fill="none" stroke="#000000" d="M 0 15.556315 L 120 15.556315 "/>
</g>
</svg>
